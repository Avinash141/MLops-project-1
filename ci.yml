name: Housing Price Prediction CI/CD Pipeline

on:
  push:
    branches: [ main, reg, hyper ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test data loading
      run: |
        python -c "from utils import load_data; df = load_data(); print(f'Dataset loaded successfully with shape: {df.shape}')"
    
    - name: Test basic regression models
      run: |
        python regression.py --mode basic --save-results
    
    - name: Test hyperparameter tuning (if not on main branch)
      if: github.ref != 'refs/heads/main'
      run: |
        python regression.py --mode hyperparameter --save-results
    
    - name: Archive results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: regression-results-${{ matrix.python-version }}
        path: |
          *.csv
          *.png
    
    - name: Check code formatting with black
      run: |
        black --check --diff .
    
    - name: Display system info
      run: |
        python -c "import pandas as pd; import sklearn; print(f'Pandas: {pd.__version__}'); print(f'Scikit-learn: {sklearn.__version__}')"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run complete analysis
      run: |
        python regression.py --mode both --save-results
    
    - name: Archive final results
      uses: actions/upload-artifact@v3
      with:
        name: final-analysis-results
        path: |
          *.csv
          *.png 